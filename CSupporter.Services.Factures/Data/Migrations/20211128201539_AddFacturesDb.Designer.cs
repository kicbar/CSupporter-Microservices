// <auto-generated />
using System;
using CSupporter.Services.Factures.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSupporter.Services.Factures.Migrations
{
    [DbContext(typeof(FactureDbContext))]
    [Migration("20211128201539_AddFacturesDb")]
    partial class AddFacturesDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSupporter.Services.Factures.Models.Facture", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FactureNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("FactureId");

                    b.ToTable("Factures");

                    b.HasData(
                        new
                        {
                            FactureId = 1,
                            ContractorId = 1,
                            FactureDate = new DateTime(2021, 11, 28, 21, 15, 37, 946, DateTimeKind.Local).AddTicks(5739),
                            FactureNo = "FV11/11/2021",
                            InsertDate = new DateTime(2021, 11, 28, 21, 15, 37, 954, DateTimeKind.Local).AddTicks(8120),
                            UpdateDate = new DateTime(2021, 11, 28, 21, 15, 37, 954, DateTimeKind.Local).AddTicks(8178),
                            Value = 200.99000000000001
                        },
                        new
                        {
                            FactureId = 2,
                            ContractorId = 1,
                            FactureDate = new DateTime(2021, 11, 28, 21, 15, 37, 958, DateTimeKind.Local).AddTicks(7729),
                            FactureNo = "FV12/11/2021",
                            InsertDate = new DateTime(2021, 11, 28, 21, 15, 37, 958, DateTimeKind.Local).AddTicks(7786),
                            UpdateDate = new DateTime(2021, 11, 28, 21, 15, 37, 958, DateTimeKind.Local).AddTicks(7792),
                            Value = 99.989999999999995
                        },
                        new
                        {
                            FactureId = 3,
                            ContractorId = 1,
                            FactureDate = new DateTime(2021, 11, 28, 21, 15, 37, 958, DateTimeKind.Local).AddTicks(7971),
                            FactureNo = "FV13/11/2021",
                            InsertDate = new DateTime(2021, 11, 28, 21, 15, 37, 958, DateTimeKind.Local).AddTicks(7979),
                            UpdateDate = new DateTime(2021, 11, 28, 21, 15, 37, 958, DateTimeKind.Local).AddTicks(7983),
                            Value = 22.989999999999998
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
